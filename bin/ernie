#!/usr/bin/env ruby

$:.unshift(File.join(File.dirname(__FILE__), *%w[.. lib]))
ERNIE_ROOT = File.join(File.dirname(__FILE__), *%w[..])

DEFAULT_ERLANG_CODEPATHS = %w[ebin]
DEFAULT_PORT = 8000

def rel(path)
  File.join(ERNIE_ROOT, path)
end

def code_paths
  DEFAULT_ERLANG_CODEPATHS.map {|n| "-pz #{rel(n)}" }.join(" ") + " \\"
end

require 'optparse'
require 'pp'

help = <<HELP
Ernie is an Erlang/Ruby BERT-RPC Server.

Basic Command Line Usage:
  ernie [options] <path to handler file>

Options:
HELP

options = {}
OptionParser.new do |opts|
  opts.banner = help

  opts.on("-h HANDLER", "--handler HANDLER", "Handler ruby file") do |x|
    options[:handler] = x
  end

  opts.on("-p PORT", "--port PORT", "Port") do |x|
    options[:port] = x
  end

  opts.on("-n NUMBER", "--number NUMBER", "Number of handler instances") do |x|
    options[:number] = x
  end

  opts.on("-l LOGLEVEL", "--log-level LOGLEVEL", "Log level (0-4)") do |x|
    options[:log_level] = x
  end

  opts.on("-d", "--detached", "Run as a daemon") do
    options[:detached] = true
  end

  opts.on("-P", "--pidfile PIDFILE", "Location to write pid file.") do |x|
    options[:pidfile] = x
  end
end.parse!

if command = ARGV[0]
  if !%w{reload-handlers}.include?(command)
    puts "Invlalid command. Valid commands are:"
    puts "  reload-handlers"
    exit(1)
  end

  require 'rubygems'
  require 'bertrpc'
  port = options[:port] || DEFAULT_PORT
  svc = BERTRPC::Service.new('localhost', port)
  puts svc.call.__admin__.send(command.gsub(/-/, '_'))
else
  if !options[:handler]
    puts "A handler must be specified: ernie -h /path/to/handler.rb"
    exit(1)
  end

  handler = options[:handler]
  port = options[:port] || DEFAULT_PORT
  number = options[:number] || 1
  log_level = options[:log_level] || 2
  pidfile = options[:pidfile] ? "-ernie_server_app pidfile \"'#{options[:pidfile]}'\"" : ''
  detached = options[:detached] ? '-detached' : ''

  cmd = %Q{erl -boot start_sasl \
               #{detached} \
               +Bc \
               +K true \
               -smp enable \
               #{code_paths}
               #{pidfile} \
               -ernie_server_app port #{port} \
               -ernie_server_app handler '"#{handler}"' \
               -ernie_server_app number #{number} \
               -ernie_server_app log_level #{log_level} \
               -run ernie_server_app boot}.squeeze(' ')
  puts cmd
  exec(cmd)
end